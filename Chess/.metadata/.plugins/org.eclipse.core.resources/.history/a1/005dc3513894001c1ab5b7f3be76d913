package game.opponent;

import java.util.*;

import game.*;

public class TranspositionTable {
	
	public enum FLAG {
		HFNONE, 
		HFALPHA, 
		HFBETA, 
		HFEXACT
	}
	
	public static Hashtable<Long, Move> moveTable = new Hashtable<>();
	public static Hashtable<Long, Double> evalTable = new Hashtable<>();
	public static Hashtable<Long, Double> alphaTable = new Hashtable<>();
	public static Hashtable<Long, Double> betaTable = new Hashtable<>();
	public static Hashtable<Long, Integer> depthTable = new Hashtable<>();
	public static Hashtable<Long, FLAG> flagTable = new Hashtable<>();
	
	public static void addToTable(long ZobristKey, Move move, Double eval, Double alpha, Double beta, int depth, FLAG flag) {
		moveTable.put(ZobristKey, move);
		evalTable.put(ZobristKey, eval);
		alphaTable.put(ZobristKey, alpha);
		betaTable.put(ZobristKey, beta);
		depthTable.put(ZobristKey, depth);
		flagTable.put(ZobristKey, flag);
	}
	
	public static double probeHash(Board board, int depth, double alpha, double beta) {
		long zKey_position = board.zKey.getZobristHash(board);
		if (moveTable.containsKey(zKey_position)) { //then all other tables do possess this key too
			Move move = moveTable.get(zKey_position);
		}
	}

}
